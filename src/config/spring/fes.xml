<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<mvc:annotation-driven />
	


	<!-- 千万要加上这句话，否则图片出不来了，记住记住 -->
	<mvc:default-servlet-handler />

	<context:annotation-config />

	<!-- 启用以下包中,Spring注释的Bean -->
	<context:component-scan base-package="com.fes" />
	<context:component-scan base-package="com.airchina" />

	<!-- 启用 AOP 功能 -->
	<aop:aspectj-autoproxy />

	<!-- 配置数据源1 start -->
	<bean id="fes" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
      <!-- 基本属性 url、user、password -->
<!--       <property name="url" value="jdbc:postgresql://localhost/fes?characterEncoding=utf8" /> -->
  
  <!--
      <property name="url" value="jdbc:mysql://localhost:3307/test?characterEncoding=UTF-8" />     
      <property name="username" value="root" />
      <property name="password" value="123456" />
  -->
  
 	     
      <property name="url" value="jdbc:oracle:thin:@10.10.111.177:1521:airchina" />
      <property name="username" value="airchina" />
      <property name="password" value="airchina" />
	
	
	
      <!-- 配置初始化大小、最小、最大 -->
      <property name="initialSize" value="10" />
      <property name="minIdle" value="10" /> 
      <property name="maxActive" value="200" />

      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="60000" />

      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      <property name="timeBetweenEvictionRunsMillis" value="60000" />

      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      <property name="minEvictableIdleTimeMillis" value="300000" />

      <property name="validationQuery" value="SELECT 'x'" />
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="false" />
      <property name="testOnReturn" value="false" />

      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      <!-- <property name="poolPreparedStatements" value="false" />
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->

      <!-- 配置监控统计拦截的filters -->
      <property name="filters" value="stat" /> 
    </bean>
    <!-- 配置数据源1 end -->
    
    <!-- 配置sqlsessionfactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="fes" />
		<property name="configLocation" value="classpath:/mybatis/mybatis.config.xml" />
		<property name="mapperLocations" value="classpath:com/fes/mapper/**/*Mapper.xml" />
	</bean>
	
	<!-- 配置sqlSessionTemplate，将来取代 jdbcTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 自动扫描指定包下的所有mapper接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.fes.mapper"></property>
	</bean>

	<mvc:interceptors>
	<mvc:interceptor>
	<mvc:mapping path="/*"/>
	<bean class="com.airchina.interceptor.CommonInterceptor"></bean>
	</mvc:interceptor>
	</mvc:interceptors>

	
	<!-- 配置连接池 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="fes"></property>
	</bean>

	<!-- 开启注解事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="fes"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置视图解析类 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/page/" />
		<property name="suffix" value=".jsp" />
	</bean>
</beans>